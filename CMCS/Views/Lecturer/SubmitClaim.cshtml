@model CMCS.ViewModels.ClaimSubmissionViewModel
@{
    ViewData["Title"] = "Submit New Claim";
}

<div class="container">
    <div class="card">
        <div class="header">
            <h1>Submit New Claim</h1>
            <p>Create and submit a new monthly claim</p>
        </div>

        <div style="display: flex; justify-content: center; margin-bottom: 30px;">
            <div style="display: flex; align-items: center; gap: 20px;">
                <div style="display: flex; align-items: center; gap: 10px;">
                    <div style="width: 40px; height: 40px; border-radius: 50%; background: #3b82f6; color: white; display: flex; align-items: center; justify-content: center; font-weight: 600;">1</div>
                    <span style="font-weight: 500;">Claim Details</span>
                </div>
                <div style="width: 50px; height: 2px; background: #d1d5db;"></div>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <div style="width: 40px; height: 40px; border-radius: 50%; background: #e5e7eb; color: #6b7280; display: flex; align-items: center; justify-content: center; font-weight: 600;">2</div>
                    <span style="color: #6b7280;">Documents</span>
                </div>
                <div style="width: 50px; height: 2px; background: #d1d5db;"></div>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <div style="width: 40px; height: 40px; border-radius: 50%; background: #e5e7eb; color: #6b7280; display: flex; align-items: center; justify-content: center; font-weight: 600;">3</div>
                    <span style="color: #6b7280;">Review & Submit</span>
                </div>
            </div>
        </div>

        <form asp-action="SubmitClaim" method="post" enctype="multipart/form-data" id="claimForm">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

            <h3 style="color: #1e3a8a; margin-bottom: 20px;">Basic Information</h3>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 30px;">
                <div class="form-group">
                    <label asp-for="ModuleId">Module/Course *</label>
                    <select asp-for="ModuleId" asp-items="Model.AvailableModules" class="form-control" id="moduleSelect" required>
                        <option value="">Select Module...</option>
                    </select>
                    <span asp-validation-for="ModuleId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ClaimPeriod">Claim Period *</label>
                    <input asp-for="ClaimPeriod" type="month" class="form-control" required />
                    <span asp-validation-for="ClaimPeriod" class="text-danger"></span>
                </div>
            </div>

            <h3 style="color: #1e3a8a; margin-bottom: 20px;">Hours & Rate Information</h3>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 30px;">
                <div class="form-group">
                    <label asp-for="HoursWorked">Hours Worked *</label>
                    <input asp-for="HoursWorked" type="number" step="0.5" class="form-control" id="hoursWorked" placeholder="0.0" required />
                    <span asp-validation-for="HoursWorked" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Hourly Rate (R) *</label>
                    <input type="text" class="form-control" id="hourlyRate" readonly style="background: #f3f4f6;" />
                </div>
            </div>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 30px;">
                <div class="form-group">
                    <label>Total Amount (R)</label>
                    <input type="text" class="form-control" id="totalAmount" readonly style="background: #f3f4f6; font-weight: 600; font-size: 1.1rem;" value="R0.00" />
                </div>

                <div class="form-group">
                    <label>Standard Module Rate (R)</label>
                    <input type="text" class="form-control" id="standardRate" readonly style="background: #f3f4f6;" />
                </div>
            </div>

            <h3 style="color: #1e3a8a; margin-bottom: 20px;">Additional Information</h3>

            <div class="form-group" style="margin-bottom: 30px;">
                <label asp-for="AdditionalNotes">Additional Notes</label>
                <textarea asp-for="AdditionalNotes" class="form-control" rows="3" placeholder="Enter any additional notes or comments about this claim..."></textarea>
            </div>

            <h3 style="color: #1e3a8a; margin-bottom: 20px;">Supporting Documents</h3>

            <div class="upload-area" id="uploadArea">
                <div style="font-size: 3rem; margin-bottom: 10px;">📎</div>
                <p style="font-weight: 500; margin-bottom: 5px;">Drop files here or click to browse</p>
                <p style="font-size: 0.9rem; color: #6b7280;">Supported: PDF, DOC, DOCX, XLS, XLSX (Max 10MB each)</p>
            </div>
            <input type="file" id="fileInput" name="Documents" multiple accept=".pdf,.doc,.docx,.xls,.xlsx" style="display: none;" />
            <div id="fileList" class="file-list"></div>

            <div style="display: flex; gap: 10px; margin-top: 30px;">
                <button type="submit" name="saveAsDraft" value="false" class="btn btn-primary">Submit Claim</button>
                <button type="submit" name="saveAsDraft" value="true" class="btn" style="background: #6b7280; color: white;">Save as Draft</button>
                <a asp-action="Dashboard" class="btn" style="background: #e5e7eb; color: #374151;">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-calculate total amount
        const moduleSelect = document.getElementById('moduleSelect');
        const hoursInput = document.getElementById('hoursWorked');
        const hourlyRateInput = document.getElementById('hourlyRate');
        const totalAmountInput = document.getElementById('totalAmount');
        const standardRateInput = document.getElementById('standardRate');

        moduleSelect.addEventListener('change', async function () {
            const moduleId = this.value;
            if (moduleId) {
                try {
                    const response = await fetch(`/Lecturer/GetHourlyRate?moduleId=${moduleId}`);
                    const data = await response.json();
                    hourlyRateInput.value = 'R' + data.hourlyRate.toFixed(2);
                    standardRateInput.value = 'R' + data.hourlyRate.toFixed(2);
                    calculateTotal();
                } catch (error) {
                    console.error('Error fetching hourly rate:', error);
                }
            } else {
                hourlyRateInput.value = '';
                standardRateInput.value = '';
                totalAmountInput.value = 'R0.00';
            }
        });

        hoursInput.addEventListener('input', calculateTotal);

        function calculateTotal() {
            const hours = parseFloat(hoursInput.value) || 0;
            const rateText = hourlyRateInput.value.replace('R', '').trim();
            const rate = parseFloat(rateText) || 0;
            const total = hours * rate;
            totalAmountInput.value = 'R' + total.toFixed(2);
        }

        // File upload handling
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');

        uploadArea.addEventListener('click', () => fileInput.click());

        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#3b82f6';
            uploadArea.style.background = '#eff6ff';
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.style.borderColor = '#d1d5db';
            uploadArea.style.background = '#f9fafb';
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#d1d5db';
            uploadArea.style.background = '#f9fafb';
            fileInput.files = e.dataTransfer.files;
            displayFiles();
        });

        fileInput.addEventListener('change', displayFiles);

        function displayFiles() {
            fileList.innerHTML = '';
            const files = fileInput.files;

            if (files.length === 0) return;

            for (let file of files) {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';

                const sizeMB = (file.size / 1024 / 1024).toFixed(2);
                const sizeColor = sizeMB > 10 ? 'color: #dc2626;' : '';

                fileItem.innerHTML = `
                        <span>${file.name}</span>
                        <span style="${sizeColor}">${sizeMB} MB</span>
                    `;

                fileList.appendChild(fileItem);
            }
        }

        // Form validation
        document.getElementById('claimForm').addEventListener('submit', function (e) {
            const moduleId = moduleSelect.value;
            const hours = hoursInput.value;

            if (!moduleId || !hours) {
                e.preventDefault();
                alert('Please fill in all required fields');
                return false;
            }

            if (parseFloat(hours) <= 0) {
                e.preventDefault();
                alert('Hours worked must be greater than 0');
                return false;
            }

            return true;
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}