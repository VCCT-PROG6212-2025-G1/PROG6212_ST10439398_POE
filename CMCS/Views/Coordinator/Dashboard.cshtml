<!--------------------- Start of File ------------------------->
@model CMCS.ViewModels.CoordinatorDashboardViewModel
@{
    ViewData["Title"] = User.IsInRole("Manager") ? "Manager Dashboard" : "Coordinator Dashboard";
    Layout = "_Layout";
}

<style>
    .dashboard-container {
        max-width: 1600px;
        margin: 0 auto;
        padding: 20px;
    }

    .dashboard-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 40px 30px;
        border-radius: 16px;
        margin-bottom: 30px;
        box-shadow: 0 8px 24px rgba(102, 126, 234, 0.4);
    }

    .header-content h1 {
        font-size: 2.5rem;
        font-weight: 800;
        margin: 0 0 10px 0;
    }

    .header-content p {
        font-size: 1.1rem;
        opacity: 0.9;
        margin: 0;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        padding: 30px;
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        border-left: 5px solid;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        }

        .stat-card.orange {
            border-color: #f59e0b;
        }

        .stat-card.green {
            border-color: #10b981;
        }

        .stat-card.red {
            border-color: #ef4444;
        }

        .stat-card.blue {
            border-color: #3b82f6;
        }

    .stat-value {
        font-size: 2.5rem;
        font-weight: 800;
        margin-bottom: 8px;
    }

    .stat-card.orange .stat-value {
        color: #f59e0b;
    }

    .stat-card.green .stat-value {
        color: #10b981;
    }

    .stat-card.red .stat-value {
        color: #ef4444;
    }

    .stat-card.blue .stat-value {
        color: #3b82f6;
    }

    .stat-label {
        color: #6b7280;
        font-size: 0.95rem;
        font-weight: 600;
    }

    .claims-section {
        background: white;
        padding: 30px;
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #e5e7eb;
    }

    .section-title {
        color: #1e3a8a;
        font-size: 1.8rem;
        font-weight: 700;
        margin: 0;
    }

    .filter-buttons {
        display: flex;
        gap: 10px;
    }

    .filter-btn {
        padding: 10px 20px;
        border: 2px solid #e5e7eb;
        background: white;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        color: #374151;
    }

        .filter-btn:hover {
            border-color: #3b82f6;
            color: #3b82f6;
            background: #eff6ff;
        }

        .filter-btn.active {
            background: #3b82f6;
            color: white;
            border-color: #3b82f6;
        }

    .bulk-actions {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
    }

    .btn-bulk {
        padding: 12px 24px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        font-size: 0.95rem;
    }

    .btn-approve {
        background: #10b981;
        color: white;
    }

        .btn-approve:hover {
            background: #059669;
            transform: translateY(-2px);
        }

    .btn-reject {
        background: #ef4444;
        color: white;
    }

        .btn-reject:hover {
            background: #dc2626;
            transform: translateY(-2px);
        }

    .claims-count {
        color: #6b7280;
        font-size: 0.95rem;
        margin-bottom: 20px;
    }

    .claims-table {
        width: 100%;
        border-collapse: collapse;
    }

        .claims-table thead {
            background: #f9fafb;
        }

        .claims-table th {
            padding: 15px;
            text-align: left;
            font-weight: 700;
            color: #374151;
            border-bottom: 2px solid #e5e7eb;
        }

        .claims-table td {
            padding: 15px;
            border-bottom: 1px solid #e5e7eb;
        }

        .claims-table tr:hover {
            background: #f9fafb;
        }

    .lecturer-info {
        display: flex;
        flex-direction: column;
    }

    .lecturer-name {
        font-weight: 600;
        color: #1e3a8a;
    }

    .lecturer-email {
        font-size: 0.85rem;
        color: #6b7280;
    }

    .module-info {
        display: flex;
        flex-direction: column;
    }

    .module-code {
        font-weight: 600;
        color: #374151;
    }

    .module-name {
        font-size: 0.85rem;
        color: #6b7280;
    }

    .status-badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .status-pending {
        background: #fef3c7;
        color: #92400e;
    }

    .status-urgent {
        background: #fee2e2;
        color: #991b1b;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
    }

    .btn-action {
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
        font-size: 0.85rem;
        text-decoration: none;
        display: inline-block;
    }

    .btn-view {
        background: #3b82f6;
        color: white;
    }

        .btn-view:hover {
            background: #2563eb;
            color: white;
        }

    .btn-approve-single {
        background: #10b981;
        color: white;
    }

        .btn-approve-single:hover {
            background: #059669;
        }

    .btn-reject-single {
        background: #ef4444;
        color: white;
    }

        .btn-reject-single:hover {
            background: #dc2626;
        }

    .no-claims {
        text-align: center;
        padding: 60px 20px;
        color: #6b7280;
    }

    .no-claims-icon {
        font-size: 4rem;
        margin-bottom: 20px;
    }

    .modal-backdrop {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        z-index: 9999;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: white;
        padding: 30px;
        border-radius: 12px;
        max-width: 500px;
        width: 90%;
    }

    .modal-title {
        color: #1e3a8a;
        margin-bottom: 15px;
    }

    .modal-text {
        color: #6b7280;
        margin-bottom: 20px;
    }

    .modal-textarea {
        width: 100%;
        min-height: 100px;
        padding: 12px;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-family: inherit;
        margin-bottom: 20px;
        box-sizing: border-box;
    }

    .modal-buttons {
        display: flex;
        gap: 10px;
    }

    .modal-btn {
        flex: 1;
        padding: 12px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
    }

    .modal-btn-cancel {
        background: #6b7280;
        color: white;
    }

    .modal-btn-confirm {
        background: #ef4444;
        color: white;
    }

    @@media (max-width: 1200px) {
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .stats-grid {
            grid-template-columns: 1fr;
        }

        .filter-buttons {
            flex-wrap: wrap;
        }
    }
</style>

<div class="dashboard-container">
    <div class="dashboard-header">
        <div class="header-content">
            @if (User.IsInRole("Manager"))
            {
                <h1>Academic Manager Dashboard</h1>
                <p>Review and approve monthly claims efficiently</p>
            }
            else
            {
                <h1>Programme Coordinator Dashboard</h1>
                <p>Review and approve monthly claims efficiently</p>
            }
        </div>
    </div>

    <div class="stats-grid">
        <div class="stat-card orange">
            <div class="stat-value">@Model.PendingReview</div>
            <div class="stat-label">Pending Review</div>
        </div>

        <div class="stat-card green">
            <div class="stat-value">@Model.ApprovedToday</div>
            <div class="stat-label">Approved Today</div>
        </div>

        <div class="stat-card red">
            <div class="stat-value">@Model.UrgentClaims</div>
            <div class="stat-label">Urgent (>5 days)</div>
        </div>

        <div class="stat-card blue">
            <div class="stat-value">R@(Model.TotalThisWeek.ToString("N0"))</div>
            <div class="stat-label">Total This Week</div>
        </div>
    </div>

    <div class="claims-section">
        <div class="section-header">
            <h2 class="section-title">Claims Awaiting Review</h2>
            <div class="filter-buttons">
                <a href="@Url.Action("Dashboard", new { filter = "all" })"
                   class="filter-btn @(ViewBag.CurrentFilter == "all" ? "active" : "")">
                    All Claims
                </a>
                <a href="@Url.Action("Dashboard", new { filter = "urgent" })"
                   class="filter-btn @(ViewBag.CurrentFilter == "urgent" ? "active" : "")">
                    Urgent
                </a>
                <a href="@Url.Action("Dashboard", new { filter = "thisweek" })"
                   class="filter-btn @(ViewBag.CurrentFilter == "thisweek" ? "active" : "")">
                    This Week
                </a>
                <a href="@Url.Action("Dashboard", new { filter = "bymodule" })"
                   class="filter-btn @(ViewBag.CurrentFilter == "bymodule" ? "active" : "")">
                    By Module
                </a>
            </div>
        </div>

        @if (Model.ClaimsForReview.Any())
        {
            <div class="bulk-actions">
                <button type="button" class="btn-bulk btn-approve" onclick="bulkApprove()">
                    Approve Selected
                </button>
                <button type="button" class="btn-bulk btn-reject" onclick="showBulkRejectModal()">
                    Reject Selected
                </button>
            </div>

            <div class="claims-count">
                <strong>@Model.ClaimsForReview.Count</strong> claims pending review
            </div>

            <table class="claims-table">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="selectAll" onclick="toggleSelectAll(this)"></th>
                        <th>Lecturer</th>
                        <th>Module</th>
                        <th>Hours</th>
                        <th>Amount</th>
                        <th>Submitted</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                <tbody>
                    @foreach (var claim in Model.ClaimsForReview)
                    {
                        var daysAgo = (DateTime.Now - claim.SubmissionDate).Days;
                        var isUrgent = daysAgo > 5;
                        <tr>
                            <td>
                                <input type="checkbox" class="claim-checkbox" value="@claim.ClaimId">
                            </td>
                            <td>
                                <div class="lecturer-info">
                                    <span class="lecturer-name">@claim.User.FirstName @claim.User.LastName</span>
                                    <span class="lecturer-email">@claim.User.Email</span>
                                </div>
                            </td>
                            <td>
                                <div class="module-info">
                                    <span class="module-code">@claim.Module.ModuleCode</span>
                                    <span class="module-name">@claim.Module.ModuleName</span>
                                </div>
                            </td>
                            <td>@claim.HoursWorked.ToString("0.0") hrs</td>
                            <td><strong>R@(claim.TotalAmount.ToString("N0"))</strong></td>
                            <td>@daysAgo days ago</td>
                            <td>
                                <span class="status-badge @(isUrgent ? "status-urgent" : "status-pending")">
                                    @(isUrgent ? "URGENT" : "PENDING")
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="@Url.Action("ViewClaim", new { id = claim.ClaimId })" class="btn-action btn-view">
                                        View
                                    </a>
                                    <form asp-action="ApproveClaim" method="post" style="display: inline;">
                                        <input type="hidden" name="id" value="@claim.ClaimId" />
                                        <button type="submit" class="btn-action btn-approve-single"
                                                onclick="return confirm('Approve claim for R@(claim.TotalAmount.ToString("N2"))?');">
                                            Approve
                                        </button>
                                    </form>
                                    <button type="button" class="btn-action btn-reject-single"
                                            onclick="showRejectModal(@claim.ClaimId)">
                                        Reject
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="no-claims">
                <div class="no-claims-icon">📋</div>
                <h3>No Claims Pending Review</h3>
                <p>All claims have been processed. Great work!</p>
            </div>
        }
    </div>
</div>

<div id="rejectModal" class="modal-backdrop">
    <div class="modal-content">
        <h3 class="modal-title">Reject Claim</h3>
        <p class="modal-text">Please provide a reason for rejecting this claim:</p>

        <form asp-action="RejectClaim" method="post" id="rejectForm">
            <input type="hidden" name="id" id="rejectClaimId" />
            <textarea name="reason" id="rejectReason" required class="modal-textarea" placeholder="Enter rejection reason..."></textarea>

            <div class="modal-buttons">
                <button type="button" onclick="hideRejectModal()" class="modal-btn modal-btn-cancel">
                    Cancel
                </button>
                <button type="submit" class="modal-btn modal-btn-confirm">
                    Confirm Rejection
                </button>
            </div>
        </form>
    </div>
</div>

<div id="bulkRejectModal" class="modal-backdrop">
    <div class="modal-content">
        <h3 class="modal-title">Bulk Reject Claims</h3>
        <p class="modal-text">Please provide a reason for rejecting the selected claims:</p>

        <form asp-action="BulkReject" method="post" id="bulkRejectForm">
            <div id="bulkRejectClaimIds"></div>
            <textarea name="Reason" id="bulkRejectReason" required class="modal-textarea" placeholder="Enter rejection reason..."></textarea>

            <div class="modal-buttons">
                <button type="button" onclick="hideBulkRejectModal()" class="modal-btn modal-btn-cancel">
                    Cancel
                </button>
                <button type="submit" class="modal-btn modal-btn-confirm">
                    Confirm Rejection
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function toggleSelectAll(checkbox) {
        const checkboxes = document.querySelectorAll('.claim-checkbox');
        checkboxes.forEach(function(cb) { cb.checked = checkbox.checked; });
    }

    function getSelectedClaimIds() {
        const checkboxes = document.querySelectorAll('.claim-checkbox:checked');
        return Array.from(checkboxes).map(function(cb) { return cb.value; });
    }

    function bulkApprove() {
        const claimIds = getSelectedClaimIds();

        if (claimIds.length === 0) {
            alert('Please select at least one claim to approve.');
            return;
        }

        if (!confirm('Are you sure you want to approve ' + claimIds.length + ' claim(s)?')) {
            return;
        }

        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '@Url.Action("BulkApprove")';

        claimIds.forEach(function(id) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'claimIds';
            input.value = id;
            form.appendChild(input);
        });

        document.body.appendChild(form);
        form.submit();
    }

    function showBulkRejectModal() {
        const claimIds = getSelectedClaimIds();

        if (claimIds.length === 0) {
            alert('Please select at least one claim to reject.');
            return;
        }

        const container = document.getElementById('bulkRejectClaimIds');
        container.innerHTML = '';

        claimIds.forEach(function(id) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'ClaimIds';
            input.value = id;
            container.appendChild(input);
        });

        document.getElementById('bulkRejectModal').style.display = 'flex';
        document.getElementById('bulkRejectReason').focus();
    }

    function hideBulkRejectModal() {
        document.getElementById('bulkRejectModal').style.display = 'none';
        document.getElementById('bulkRejectReason').value = '';
    }

    function showRejectModal(claimId) {
        document.getElementById('rejectClaimId').value = claimId;
        document.getElementById('rejectModal').style.display = 'flex';
        document.getElementById('rejectReason').focus();
    }

    function hideRejectModal() {
        document.getElementById('rejectModal').style.display = 'none';
        document.getElementById('rejectReason').value = '';
    }

    document.getElementById('rejectModal').addEventListener('click', function(e) {
        if (e.target === this) hideRejectModal();
    });

    document.getElementById('bulkRejectModal').addEventListener('click', function(e) {
        if (e.target === this) hideBulkRejectModal();
    });

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            hideRejectModal();
            hideBulkRejectModal();
        }
    });
</script>
<!--------------------- End of File ------------------------->