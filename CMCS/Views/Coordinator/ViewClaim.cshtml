<!--------------------- Start of File ------------------------->
@model CMCS.Models.Claim
@{
    ViewData["Title"] = "Claim Details";
    Layout = "_Layout";
}

<style>
    .claim-details-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    .page-header {
        background: white;
        padding: 25px 30px;
        border-radius: 12px;
        margin-bottom: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .page-header h1 {
        color: #1e3a8a;
        font-size: 1.8rem;
        font-weight: 700;
        margin: 0 0 5px 0;
    }

    .page-header p {
        color: #6b7280;
        margin: 0;
    }

    .claim-card {
        background: white;
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .claim-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 2px solid #e5e7eb;
    }

    .claim-title {
        color: #1e3a8a;
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
    }

    .claim-date {
        color: #6b7280;
        font-size: 0.9rem;
        margin-top: 5px;
    }

    .status-badge {
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .status-submitted {
        background: #dbeafe;
        color: #1e40af;
    }

    .status-review {
        background: #fef3c7;
        color: #92400e;
    }

    .status-approved {
        background: #d1fae5;
        color: #065f46;
    }

    .status-rejected {
        background: #fee2e2;
        color: #991b1b;
    }

    .info-section {
        margin-bottom: 30px;
    }

    .section-title {
        color: #1e3a8a;
        font-size: 1.2rem;
        font-weight: 700;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 2px solid #e5e7eb;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        margin-bottom: 20px;
    }

    .info-item {
        background: #f9fafb;
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #3b82f6;
    }

    .info-label {
        color: #6b7280;
        font-size: 0.85rem;
        font-weight: 500;
        margin-bottom: 5px;
    }

    .info-value {
        color: #1e3a8a;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .claim-details-box {
        background: #f0f9ff;
        border: 2px solid #bfdbfe;
        border-radius: 12px;
        padding: 20px;
    }

    .detail-row {
        display: grid;
        grid-template-columns: 200px 1fr 200px 1fr;
        gap: 15px;
        margin-bottom: 15px;
    }

    .detail-label {
        color: #1e40af;
        font-weight: 600;
    }

    .detail-value {
        color: #374151;
        font-weight: 500;
    }

    .amount-highlight {
        color: #10b981;
        font-size: 1.3rem;
        font-weight: 700;
    }

    .documents-section {
        background: #f9fafb;
        padding: 20px;
        border-radius: 12px;
        border: 2px solid #e5e7eb;
    }

    .document-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        background: white;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 10px;
        border: 1px solid #e5e7eb;
        transition: all 0.2s;
    }

    .document-item:hover {
        border-color: #3b82f6;
        box-shadow: 0 2px 8px rgba(59, 130, 246, 0.1);
    }

    .document-info {
        display: flex;
        align-items: center;
        gap: 12px;
        flex: 1;
    }

    .document-icon {
        font-size: 1.8rem;
    }

    .document-details {
        flex: 1;
    }

    .document-name {
        color: #374151;
        font-weight: 600;
        font-size: 0.95rem;
        display: block;
        margin-bottom: 3px;
    }

    .document-meta {
        color: #6b7280;
        font-size: 0.8rem;
    }

    .btn-download {
        background: #3b82f6;
        color: white;
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.85rem;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

    .btn-download:hover {
        background: #2563eb;
        color: white;
        transform: translateY(-1px);
    }

    .no-documents {
        text-align: center;
        padding: 30px;
        color: #6b7280;
    }

    .status-history-section {
        background: white;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }

    .history-item {
        padding: 15px;
        background: #f9fafb;
        border-radius: 8px;
        border-left: 4px solid #3b82f6;
        margin-bottom: 15px;
    }

    .history-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
    }

    .history-status {
        color: #1e3a8a;
        font-weight: 700;
        font-size: 1rem;
    }

    .history-date {
        color: #6b7280;
        font-size: 0.85rem;
    }

    .history-comment {
        color: #374151;
        font-size: 0.9rem;
        font-style: italic;
    }

    .action-buttons {
        display: flex;
        gap: 15px;
        margin-top: 30px;
    }

    .btn {
        padding: 12px 30px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-block;
    }

    .btn-approve {
        background: #10b981;
        color: white;
    }

    .btn-approve:hover {
        background: #059669;
        transform: translateY(-2px);
        color: white;
    }

    .btn-reject {
        background: #ef4444;
        color: white;
    }

    .btn-reject:hover {
        background: #dc2626;
        transform: translateY(-2px);
        color: white;
    }

    .btn-back {
        background: #6b7280;
        color: white;
    }

    .btn-back:hover {
        background: #4b5563;
        color: white;
    }

    .notes-box {
        background: #fffbeb;
        border-left: 4px solid #f59e0b;
        padding: 15px;
        border-radius: 8px;
        margin-top: 20px;
    }

    .notes-content {
        color: #78350f;
    }

    .modal-backdrop {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        z-index: 9999;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: white;
        padding: 30px;
        border-radius: 12px;
        max-width: 500px;
        width: 90%;
    }

    .modal-title {
        color: #1e3a8a;
        margin-bottom: 15px;
    }

    .modal-text {
        color: #6b7280;
        margin-bottom: 20px;
    }

    .modal-textarea {
        width: 100%;
        min-height: 100px;
        padding: 12px;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-family: inherit;
        margin-bottom: 20px;
        box-sizing: border-box;
    }

    .modal-buttons {
        display: flex;
        gap: 10px;
    }

    .modal-btn {
        flex: 1;
        padding: 12px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
    }

    .modal-btn-cancel {
        background: #6b7280;
        color: white;
    }

    .modal-btn-confirm {
        background: #ef4444;
        color: white;
    }

    @@media (max-width: 768px) {
        .info-grid {
            grid-template-columns: 1fr;
        }
        .detail-row {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="claim-details-container">
    <div class="page-header">
        <h1>Claim Details</h1>
        <p>Review complete claim information</p>
    </div>

    <div class="claim-card">
        <div class="claim-header">
            <div>
                <h2 class="claim-title">Claim #CLC-@Model.ClaimId.ToString("D4")</h2>
                <p class="claim-date">Submitted on @Model.SubmissionDate.ToString("dd MMMM yyyy")</p>
            </div>
            <div>
                @{
                    var statusClass = "status-submitted";
                    var statusText = "SUBMITTED";

                    switch (Model.CurrentStatus)
                    {
                        case ClaimStatus.Submitted:
                            statusClass = "status-submitted";
                            statusText = "SUBMITTED";
                            break;
                        case ClaimStatus.UnderReview:
                            statusClass = "status-review";
                            statusText = "UNDER REVIEW";
                            break;
                        case ClaimStatus.Approved:
                            statusClass = "status-approved";
                            statusText = "APPROVED";
                            break;
                        case ClaimStatus.Rejected:
                            statusClass = "status-rejected";
                            statusText = "REJECTED";
                            break;
                    }
                }
                <span class="status-badge @statusClass">@statusText</span>
            </div>
        </div>

        <div class="info-section">
            <h3 class="section-title">Lecturer Information</h3>
            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">Name:</div>
                    <div class="info-value">@Model.User.FirstName @Model.User.LastName</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Email:</div>
                    <div class="info-value">@Model.User.Email</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Phone:</div>
                    <div class="info-value">@(Model.User.PhoneNumber ?? "Not provided")</div>
                </div>
            </div>
        </div>

        <div class="info-section">
            <h3 class="section-title">Module Information</h3>
            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">Module Code:</div>
                    <div class="info-value">@Model.Module.ModuleCode</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Module Name:</div>
                    <div class="info-value">@Model.Module.ModuleName</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Standard Rate:</div>
                    <div class="info-value">R@(Model.Module.StandardHourlyRate.ToString("N2")) per hour</div>
                </div>
            </div>
        </div>

        <div class="info-section">
            <h3 class="section-title">Claim Details</h3>
            <div class="claim-details-box">
                <div class="detail-row">
                    <div class="detail-label">Claim Period</div>
                    <div class="detail-value">@Model.ClaimPeriod</div>
                    <div class="detail-label">Hours Worked</div>
                    <div class="detail-value">@Model.HoursWorked.ToString("0.00") hrs</div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Hourly Rate</div>
                    <div class="detail-value">R@(Model.HourlyRate.ToString("N2"))</div>
                    <div class="detail-label">Total Amount</div>
                    <div class="detail-value amount-highlight">R@(Model.TotalAmount.ToString("N2"))</div>
                </div>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.AdditionalNotes))
        {
            <div class="info-section">
                <h3 class="section-title">Additional Notes</h3>
                <div class="notes-box">
                    <div class="notes-content">@Model.AdditionalNotes</div>
                </div>
            </div>
        }

        <div class="info-section">
            <h3 class="section-title">Supporting Documents</h3>
            <div class="documents-section">
                @if (Model.SupportingDocuments != null && Model.SupportingDocuments.Any())
                {
                    foreach (var doc in Model.SupportingDocuments)
                    {
                        <div class="document-item">
                            <div class="document-info">
                                <span class="document-icon">
                                    @if (doc.FileType == ".pdf")
                                    {
                                        <text>📄</text>
                                    }
                                    else if (doc.FileType == ".doc" || doc.FileType == ".docx")
                                    {
                                        <text>📝</text>
                                    }
                                    else if (doc.FileType == ".xls" || doc.FileType == ".xlsx")
                                    {
                                        <text>📊</text>
                                    }
                                    else
                                    {
                                        <text>📎</text>
                                    }
                                </span>
                                <div class="document-details">
                                    <span class="document-name">@doc.FileName</span>
                                    <span class="document-meta">
                                        @doc.FileType.ToUpper() • @((doc.FileSize / 1024.0 / 1024.0).ToString("0.00")) MB
                                    </span>
                                </div>
                            </div>
                            <a href="@doc.FilePath" target="_blank" class="btn-download" download="@doc.FileName">
                                ⬇️ Download
                            </a>
                        </div>
                    }
                }
                else
                {
                    <div class="no-documents">
                        <p>📂 No supporting documents uploaded</p>
                    </div>
                }
            </div>
        </div>
    </div>

    @if (Model.StatusHistory != null && Model.StatusHistory.Any())
    {
        <div class="status-history-section">
            <h3 class="section-title">Status History</h3>
            @foreach (var history in Model.StatusHistory.OrderBy(h => h.ChangeDate))
            {
                <div class="history-item">
                    <div class="history-header">
                        <span class="history-status">
                            @switch (history.NewStatus)
                            {
                                case ClaimStatus.Draft:
                                    <text>Draft</text>
                                    break;
                                case ClaimStatus.Submitted:
                                    <text>Submitted</text>
                                    break;
                                case ClaimStatus.UnderReview:
                                    <text>Under Review</text>
                                    break;
                                case ClaimStatus.Approved:
                                    <text>Approved &#10003;</text>
                                    break;
                                case ClaimStatus.Rejected:
                                    <text>Rejected &#10007;</text>
                                    break;
                                case ClaimStatus.PaymentProcessing:
                                    <text>Payment Processing</text>
                                    break;
                                case ClaimStatus.Paid:
                                    <text>Paid</text>
                                    break;
                            }
                        </span>
                        <span class="history-date">@history.ChangeDate.ToString("dd MMM yyyy HH:mm")</span>
                    </div>
                    @if (!string.IsNullOrEmpty(history.Comments))
                    {
                        <div class="history-comment">"@history.Comments"</div>
                    }
                </div>
            }
        </div>
    }

   @{
    
       var formattedTotal = Model.TotalAmount.ToString("N2");
   }

   <div class="action-buttons">
        @if (Model.CurrentStatus == ClaimStatus.Submitted || Model.CurrentStatus == ClaimStatus.UnderReview)
        {
            <form asp-action="ApproveClaim" method="post" style="display: inline;">
                <input type="hidden" name="id" value="@Model.ClaimId" />
                <button type="submit" class="btn btn-approve" onclick='return confirm("Are you sure you want to approve this claim for R@formattedTotal?");'>
                    &#10003; Approve Claim
                </button>
            </form>

            <button type="button" class="btn btn-reject" onclick="showRejectModal()">
                &#10007; Reject Claim
            </button>
        }

        <a asp-action="Dashboard" class="btn btn-back">← Back to Dashboard</a>
    </div>
</div>

<div id="rejectModal" class="modal-backdrop">
    <div class="modal-content">
        <h3 class="modal-title">Reject Claim</h3>
        <p class="modal-text">Please provide a reason for rejecting this claim:</p>
        
        <form asp-action="RejectClaim" method="post">
            <input type="hidden" name="id" value="@Model.ClaimId" />
            <textarea name="reason" id="rejectReason" required class="modal-textarea" placeholder="Enter rejection reason..."></textarea>
            
            <div class="modal-buttons">
                <button type="button" onclick="hideRejectModal()" class="modal-btn modal-btn-cancel">
                    Cancel
                </button>
                <button type="submit" class="modal-btn modal-btn-confirm">
                    Confirm Rejection
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function showRejectModal() {
        document.getElementById('rejectModal').style.display = 'flex';
        document.getElementById('rejectReason').focus();
    }

    function hideRejectModal() {
        document.getElementById('rejectModal').style.display = 'none';
        document.getElementById('rejectReason').value = '';
    }

    document.getElementById('rejectModal').addEventListener('click', function(e) {
        if (e.target === this) {
            hideRejectModal();
        }
    });

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            hideRejectModal();
        }
    });
</script>
<!--------------------- End of File ------------------------->