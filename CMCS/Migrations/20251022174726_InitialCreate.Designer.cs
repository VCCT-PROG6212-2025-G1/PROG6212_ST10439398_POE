// <auto-generated />
using System;
using CMCS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMCS.Migrations
{
    [DbContext(typeof(CMCSContext))]
    [Migration("20251022174726_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMCS.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<string>("AdditionalNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimPeriod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HoursWorked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UserId");

                    b.ToTable("Claims");

                    b.HasData(
                        new
                        {
                            ClaimId = 1,
                            AdditionalNotes = "October 2024 teaching hours for Programming 2B",
                            ClaimPeriod = "2024-10",
                            CurrentStatus = 1,
                            HourlyRate = 450.00m,
                            HoursWorked = 25.5m,
                            ModuleId = 1,
                            SubmissionDate = new DateTime(2024, 9, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 11475.00m,
                            UserId = 1
                        },
                        new
                        {
                            ClaimId = 2,
                            AdditionalNotes = "October 2024 teaching hours for HCI",
                            ClaimPeriod = "2024-10",
                            CurrentStatus = 3,
                            HourlyRate = 420.00m,
                            HoursWorked = 18.0m,
                            LastModified = new DateTime(2024, 9, 26, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 2,
                            SubmissionDate = new DateTime(2024, 9, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 7560.00m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CMCS.Models.ClaimStatusHistory", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedBy")
                        .HasColumnType("int");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewStatus")
                        .HasColumnType("int");

                    b.Property<int>("PreviousStatus")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.HasIndex("ChangedBy");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimStatusHistories");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            ChangeDate = new DateTime(2024, 9, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ChangedBy = 1,
                            ClaimId = 1,
                            Comments = "Claim submitted by lecturer",
                            NewStatus = 1,
                            PreviousStatus = 0
                        },
                        new
                        {
                            StatusId = 2,
                            ChangeDate = new DateTime(2024, 9, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ChangedBy = 1,
                            ClaimId = 2,
                            Comments = "Claim submitted by lecturer",
                            NewStatus = 1,
                            PreviousStatus = 0
                        },
                        new
                        {
                            StatusId = 3,
                            ChangeDate = new DateTime(2024, 9, 26, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ChangedBy = 2,
                            ClaimId = 2,
                            Comments = "Claim approved by Programme Coordinator",
                            NewStatus = 3,
                            PreviousStatus = 1
                        });
                });

            modelBuilder.Entity("CMCS.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("StandardHourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.HasIndex("ModuleCode")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            ModuleId = 1,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Advanced programming concepts in C# and .NET development",
                            IsActive = true,
                            ModuleCode = "PROG6212",
                            ModuleName = "Programming 2B",
                            StandardHourlyRate = 450.00m
                        },
                        new
                        {
                            ModuleId = 2,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "User interface design and usability principles",
                            IsActive = true,
                            ModuleCode = "HCIN6212",
                            ModuleName = "Human Computer Interaction",
                            StandardHourlyRate = 420.00m
                        },
                        new
                        {
                            ModuleId = 3,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Introduction to programming fundamentals and logic",
                            IsActive = true,
                            ModuleCode = "PROG5112",
                            ModuleName = "Programming 1B",
                            StandardHourlyRate = 400.00m
                        },
                        new
                        {
                            ModuleId = 4,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Modern web development with HTML, CSS, and JavaScript",
                            IsActive = true,
                            ModuleCode = "WEDE5020",
                            ModuleName = "Web Development",
                            StandardHourlyRate = 430.00m
                        });
                });

            modelBuilder.Entity("CMCS.Models.SupportingDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DocumentId");

                    b.HasIndex("ClaimId");

                    b.ToTable("SupportingDocuments");
                });

            modelBuilder.Entity("CMCS.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.lecturer@iie.ac.za",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Lecturer",
                            PhoneNumber = "+27 11 123 4567",
                            UserRole = 0
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.coordinator@iie.ac.za",
                            FirstName = "Jane",
                            IsActive = true,
                            LastName = "Coordinator",
                            PhoneNumber = "+27 11 234 5678",
                            UserRole = 1
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mike.manager@iie.ac.za",
                            FirstName = "Mike",
                            IsActive = true,
                            LastName = "Manager",
                            PhoneNumber = "+27 11 345 6789",
                            UserRole = 2
                        },
                        new
                        {
                            UserId = 4,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.davis@iie.ac.za",
                            FirstName = "Sarah",
                            IsActive = true,
                            LastName = "Davis",
                            PhoneNumber = "+27 11 456 7890",
                            UserRole = 0
                        },
                        new
                        {
                            UserId = 5,
                            CreatedDate = new DateTime(2024, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.hr@iie.ac.za",
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "HR",
                            PhoneNumber = "+27 11 567 8901",
                            UserRole = 3
                        });
                });

            modelBuilder.Entity("CMCS.Models.Claim", b =>
                {
                    b.HasOne("CMCS.Models.Module", "Module")
                        .WithMany("Claims")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CMCS.Models.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMCS.Models.ClaimStatusHistory", b =>
                {
                    b.HasOne("CMCS.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ChangedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CMCS.Models.Claim", "Claim")
                        .WithMany("StatusHistory")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMCS.Models.Module", b =>
                {
                    b.HasOne("CMCS.Models.User", null)
                        .WithMany("Modules")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CMCS.Models.SupportingDocument", b =>
                {
                    b.HasOne("CMCS.Models.Claim", "Claim")
                        .WithMany("SupportingDocuments")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("CMCS.Models.Claim", b =>
                {
                    b.Navigation("StatusHistory");

                    b.Navigation("SupportingDocuments");
                });

            modelBuilder.Entity("CMCS.Models.Module", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("CMCS.Models.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
